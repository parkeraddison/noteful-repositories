#!/bin/sh

# post-commit
# ===========
#
# The post-commit hook adds a reference to the commit in the notes, then finally
# creates a redacted copy of the notes and commits it to the wiki.

echo ">>> [HOOK] post-commit: Start"

# TODO: Variables should really be synced up between the hooks.
privatefile="Notes.md"
wikidir=".wiki/"
publicfilename="Notes.md"

# Add most recent commit hash and message to the notes
repourl=$(git config --get remote.origin.url | sed -e 's+:+/+g'| sed -e 's,git@,https://,g' | sed -e 's,/$,,' | sed -e 's,.git$,,')
commithash=$(git log -1 --pretty='%H')
commitshort=$(git log -1 --pretty='%h')

echo "\
Adding commit reference to private notes. A backup of the notes are stored at
\`.$privatefile.bak\` in the event of any ill effects."
cp "$privatefile" ".$privatefile.bak"

# Print # followed by a zero-width string determined by the sequence {1..$var}
hashlink="[$commitshort]($repourl/commit/$commithash)"
message=$(git log -1 --pretty='"%s" | %D | %as')
headinglevel=6
if [ "$(tail -1 "$privatefile")" = '' ]; then
    nl=""
else
    nl="
"
fi
cat >> "$privatefile" << EOF
$nl> $(for i in $(seq 1 $headinglevel); do printf '#'; done) $hashlink
> $message
EOF

# Finally, add the redacted notes to the wiki repo then commit and push there
# with the same message as this commit.
#
# For explanation of this command, see Notes!
perl -0 -pe 's/(?<!\\){~.*?(?<!\\)~}/REDACTED/gs' "$privatefile" > "$wikidir$publicfilename"

branch=$(git branch --show-current)
commitmsg=$(git log -1 --pretty='%s')
git -C "$wikidir" add -f "$publicfilename" && \
    git -C "$wikidir" commit -m "($branch) $commitmsg"

echo "<<< [HOOK] post-commit: End"
